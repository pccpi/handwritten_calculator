from dataclasses import dataclass
from typing import List
import numpy as np
import streamlit as st
from streamlit_drawable_canvas import st_canvas

@dataclass
class Settings:
    bg_color: str
    stroke_color: str
    stroke_width: int
    realtime: bool
    digits_model_path: str
    symbols_model_path: str
    operator_labels: List[str]

def topbar():
    st.title("üñäÔ∏è –†—É–∫–æ–ø–∏—Å–Ω—ã–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä")

def sidebar_settings(default_operator_labels: str) -> Settings:
    with st.sidebar:
        st.markdown("### –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
        bg = st.color_picker("–¶–≤–µ—Ç —Ñ–æ–Ω–∞ –≤—Å–µ—Ö –∫–∞–Ω–≤–∞—Å–æ–≤", value="#FFFFFF")
        stroke = st.color_picker("–¶–≤–µ—Ç –ø–µ—Ä–∞", value="#000000")
        width = st.slider("–¢–æ–ª—â–∏–Ω–∞ –ø–µ—Ä–∞", 8, 40, 22)
        realtime = st.toggle("–†–∞—Å–ø–æ–∑–Ω–∞–≤–∞—Ç—å –Ω–∞ –ª–µ—Ç—É", value=True)

        st.markdown("---")
        st.markdown("**–ü—É—Ç–∏ –∫ –º–æ–¥–µ–ª—è–º**")
        digits_path = st.text_input("Digits model (.keras)", "digits_model.keras")
        symbols_path = st.text_input("Symbols model (.keras)", "symbols_cnn_model.keras")

        st.markdown("---")
        labels_str = st.text_input("–ú–µ—Ç–∫–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ (–ø–æ –∏–Ω–¥–µ–∫—Å–∞–º)", default_operator_labels)
        labels = [s.strip() for s in labels_str.split(",") if s.strip()]

    return Settings(
        bg_color=bg,
        stroke_color=stroke,
        stroke_width=width,
        realtime=realtime,
        digits_model_path=digits_path,
        symbols_model_path=symbols_path,
        operator_labels=labels
    )

def _canvas(title: str, key: str, bg_color: str, stroke_color: str, stroke_width: int):
    st.subheader(title)
    return st_canvas(
        fill_color="rgba(0, 0, 0, 0)",
        stroke_width=stroke_width,
        stroke_color=stroke_color,
        background_color=bg_color,
        width=280,
        height=280,
        drawing_mode="freedraw",
        key=key,
    )

def three_canvases(bg_color: str, stroke_color: str, stroke_width: int):
    col_a, col_op, col_b = st.columns(3)
    with col_a:
        c_a = _canvas("–ß–∏—Å–ª–æ A", "canvas_a", bg_color, stroke_color, stroke_width)
    with col_op:
        c_op = _canvas("–û–ø–µ—Ä–∞—Ç–æ—Ä", "canvas_op", bg_color, stroke_color, stroke_width)
    with col_b:
        c_b = _canvas("–ß–∏—Å–ª–æ B", "canvas_b", bg_color, stroke_color, stroke_width)
    return c_a, c_op, c_b

def results_block(pred_pack):
    import numpy as np
    st.markdown("---")
    st.subheader("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è")

    c1, c2, c3 = st.columns(3)
    with c1:
        st.image(pred_pack.prev_a_img, caption=f"A (–±–µ–ª–æ–µ –ø–æ —á—ë—Ä–Ω–æ–º—É) ‚Üí {pred_pack.digit_a}")
        st.progress(pred_pack.prob_digit_a)
        st.caption("—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –º–æ–¥–µ–ª–∏")
    with c2:
        st.image(pred_pack.prev_op_img, caption=f"–û–ø–µ—Ä–∞—Ç–æ—Ä (—á—ë—Ä–Ω–æ–µ –ø–æ –±–µ–ª–æ–º—É) ‚Üí {pred_pack.operator}")
        if pred_pack.operator_probs is not None:
            st.caption("–¢–æ–ø –ø–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞–º:")
            # –ø–æ–∫–∞–∂–µ–º top-3
            probs = np.array(pred_pack.operator_probs)
            top3 = probs.argsort()[-3:][::-1]
            for i in top3:
                st.write(f"- idx {i}: {float(probs[i]):.3f}")
    with c3:
        st.image(pred_pack.prev_b_img, caption=f"B (–±–µ–ª–æ–µ –ø–æ —á—ë—Ä–Ω–æ–º—É) ‚Üí {pred_pack.digit_b}")
        st.progress(pred_pack.prob_digit_b)
        st.caption("—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –º–æ–¥–µ–ª–∏")

    st.markdown("---")
    st.subheader("–í—ã—á–∏—Å–ª–µ–Ω–∏–µ")
    r = pred_pack.eval
    st.markdown(f"### ‚ûú {r.a} {r.op} {r.b} = **{r.value}**")

def help_block():
    with st.expander("–°–ø—Ä–∞–≤–∫–∞ / —Å–æ–≤–µ—Ç—ã"):
        st.markdown(
            """
- –í—Å–µ —Ç—Ä–∏ –∫–∞–Ω–≤–∞—Å–∞ **–æ–¥–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞ —Ñ–æ–Ω–∞**, –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –ø–æ–ª—è—Ä–Ω–æ—Å—Ç—å –¥–æ—Å—Ç–∏–≥–∞–µ—Ç—Å—è *–ø—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–æ–π*.
- –¶–∏—Ñ—Ä—ã ‚Üí **–±–µ–ª–æ–µ –ø–æ —á—ë—Ä–Ω–æ–º—É** (28√ó28, 1ch), –æ–ø–µ—Ä–∞—Ç–æ—Ä ‚Üí **—á—ë—Ä–Ω–æ–µ –ø–æ –±–µ–ª–æ–º—É** (100√ó100, 3ch).
- –ï—Å–ª–∏ —É –º–æ–¥–µ–ª–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ –¥—Ä—É–≥–æ–π –ø–æ—Ä—è–¥–æ–∫ –∫–ª–∞—Å—Å–æ–≤ ‚Äî –ø–æ–º–µ–Ω—è–π —Å—Ç—Ä–æ–∫—É –º–µ—Ç–æ–∫ –≤ —Å–∞–π–¥–±–∞—Ä–µ.
- –§–∞–π–ª—ã `digits_model.keras` –∏ `symbols_cnn_model.keras` –ø–æ–º–µ—Å—Ç–∏ —Ä—è–¥–æ–º —Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º –∏–ª–∏ —É–∫–∞–∂–∏ –ø—É—Ç—å.
- –ö–Ω–æ–ø–∫–∞ ¬´–û—á–∏—Å—Ç–∏—Ç—å –≤—Å—ë¬ª –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç –∫–∞–Ω–≤–∞—Å—ã.
"""
        )
